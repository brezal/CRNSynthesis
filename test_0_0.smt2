(set-logic QF_NRA_ODE)
(declare-fun o0 () Real [0.000000, 1.000000])
(declare-fun lamY2 () Real [0.000000, 1.000000])
(declare-fun lamY1 () Real [0.000000, 1.000000])
(declare-fun lamX2 () Real [0.000000, 1.000000])
(declare-fun lamX1 () Real [0.000000, 1.000000])
(declare-fun k_3 () Real [0.100000, 10.000000])
(declare-fun k_2 () Real [0.100000, 10.000000])
(declare-fun k_1 () Real [0.100000, 10.000000])
(declare-fun c0_2 () Real [0.000000, 1.000000])
(declare-fun c0_1 () Real [0.000000, 1.000000])
(declare-fun c0_0 () Real [0.000000, 1.000000])
(declare-fun Y () Real [0.000000, 10.000000])
(declare-fun X () Real [0.000000, 10.000000])
(declare-fun B () Real [0.000000, 10.000000])
(declare-fun o0_0_0 () Real [0.000000, 1.000000])
(declare-fun o0_0_t () Real [0.000000, 1.000000])
(declare-fun lamY2_0_0 () Real [0.000000, 1.000000])
(declare-fun lamY2_0_t () Real [0.000000, 1.000000])
(declare-fun lamY1_0_0 () Real [0.000000, 1.000000])
(declare-fun lamY1_0_t () Real [0.000000, 1.000000])
(declare-fun lamX2_0_0 () Real [0.000000, 1.000000])
(declare-fun lamX2_0_t () Real [0.000000, 1.000000])
(declare-fun lamX1_0_0 () Real [0.000000, 1.000000])
(declare-fun lamX1_0_t () Real [0.000000, 1.000000])
(declare-fun k_3_0_0 () Real [0.100000, 10.000000])
(declare-fun k_3_0_t () Real [0.100000, 10.000000])
(declare-fun k_2_0_0 () Real [0.100000, 10.000000])
(declare-fun k_2_0_t () Real [0.100000, 10.000000])
(declare-fun k_1_0_0 () Real [0.100000, 10.000000])
(declare-fun k_1_0_t () Real [0.100000, 10.000000])
(declare-fun c0_2_0_0 () Real [0.000000, 1.000000])
(declare-fun c0_2_0_t () Real [0.000000, 1.000000])
(declare-fun c0_1_0_0 () Real [0.000000, 1.000000])
(declare-fun c0_1_0_t () Real [0.000000, 1.000000])
(declare-fun c0_0_0_0 () Real [0.000000, 1.000000])
(declare-fun c0_0_0_t () Real [0.000000, 1.000000])
(declare-fun Y_0_0 () Real [0.000000, 10.000000])
(declare-fun Y_0_t () Real [0.000000, 10.000000])
(declare-fun X_0_0 () Real [0.000000, 10.000000])
(declare-fun X_0_t () Real [0.000000, 10.000000])
(declare-fun B_0_0 () Real [0.000000, 10.000000])
(declare-fun B_0_t () Real [0.000000, 10.000000])
(declare-fun time_0 () Real [0.000000, 1.000000])
(declare-fun mode_0 () Real [1.000000, 1.000000])
(define-ode flow_1 ((= d/dt[B] (* 1000 (+ (+ (- (* (* (* (- 0 B) X) k_3) o0) (* (* B X) k_3)) (* (* Y k_1) (+ (* X lamX1) (* Y lamY1)))) (* (* k_2 (+ (* X lamX2) (* Y lamY2))) (+ (+ (* (^ X 2) c0_2) (* X c0_1)) c0_0))))) (= d/dt[X] (* 1000 (+ (+ (+ (* (* (* B X) k_3) o0) (* (* B X) k_3)) (* (* (* Y k_1) (+ (- 0 lamX1) 1)) (+ (* X lamX1) (* Y lamY1)))) (* (* (* k_2 (+ (* X lamX2) (* Y lamY2))) (- (- (- 0 c0_1) (* 2 c0_2)) lamX2)) (+ (+ (* (^ X 2) c0_2) (* X c0_1)) c0_0))))) (= d/dt[Y] (* 1000 (+ (* (* (* Y k_1) (- (- 0 lamY1) 1)) (+ (* X lamX1) (* Y lamY1))) (* (* (* k_2 (+ (- 0 lamY2) 1)) (+ (* X lamX2) (* Y lamY2))) (+ (+ (* (^ X 2) c0_2) (* X c0_1)) c0_0))))) (= d/dt[c0_0] 0) (= d/dt[c0_1] 0) (= d/dt[c0_2] 0) (= d/dt[k_1] 0) (= d/dt[k_2] 0) (= d/dt[k_3] 0) (= d/dt[lamX1] 0) (= d/dt[lamX2] 0) (= d/dt[lamY1] 0) (= d/dt[lamY2] 0) (= d/dt[o0] 0)))
(assert (and (= mode_0 1) (and (or (= o0_0_0 1) (= o0_0_0 0)) (or (and (= c0_2_0_0 1) (= c0_1_0_0 0) (= c0_0_0_0 0)) (and (= c0_2_0_0 0) (= c0_1_0_0 1) (= c0_0_0_0 0)) (and (= c0_2_0_0 0) (= c0_1_0_0 0) (= c0_0_0_0 1))) (or (and (= lamY1_0_0 1) (= lamX1_0_0 0)) (and (= lamY1_0_0 0) (= lamX1_0_0 1))) (or (and (= lamY2_0_0 1) (= lamX2_0_0 0)) (and (= lamY2_0_0 0) (= lamX2_0_0 1))) (or (= 0 1) (<= (+ (+ (+ (+ (+ (+ (* 6 c0_1_0_0) (* 12 c0_2_0_0)) (* 6 lamX1_0_0)) (* 6 lamX2_0_0)) (* 6 lamY1_0_0)) (* 6 lamY2_0_0)) 79) 100))) (= mode_0 1) (= o0_0_t (+ o0_0_0 (* 0 time_0))) (= lamY2_0_t (+ lamY2_0_0 (* 0 time_0))) (= lamY1_0_t (+ lamY1_0_0 (* 0 time_0))) (= lamX2_0_t (+ lamX2_0_0 (* 0 time_0))) (= lamX1_0_t (+ lamX1_0_0 (* 0 time_0))) (= k_3_0_t (+ k_3_0_0 (* 0 time_0))) (= k_2_0_t (+ k_2_0_0 (* 0 time_0))) (= k_1_0_t (+ k_1_0_0 (* 0 time_0))) (= c0_2_0_t (+ c0_2_0_0 (* 0 time_0))) (= c0_1_0_t (+ c0_1_0_0 (* 0 time_0))) (= c0_0_0_t (+ c0_0_0_0 (* 0 time_0))) (forall_t 1 [0 time_0] true) (= [B_0_t X_0_t Y_0_t c0_0_0_t c0_1_0_t c0_2_0_t k_1_0_t k_2_0_t k_3_0_t lamX1_0_t lamX2_0_t lamY1_0_t lamY2_0_t o0_0_t] (integral 0. time_0 [B_0_0 X_0_0 Y_0_0 c0_0_0_0 c0_1_0_0 c0_2_0_0 k_1_0_0 k_2_0_0 k_3_0_0 lamX1_0_0 lamX2_0_0 lamY1_0_0 lamY2_0_0 o0_0_0] flow_1)) (= mode_0 1)))
(check-sat)
(exit)
